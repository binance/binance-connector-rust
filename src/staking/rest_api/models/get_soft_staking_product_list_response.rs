/*
 * Binance Staking REST API
 *
 * OpenAPI Specification for the Binance Staking REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#![allow(unused_imports)]
use crate::staking::rest_api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetSoftStakingProductListResponse {
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<bool>,
    #[serde(rename = "totalRewardsUsdt", skip_serializing_if = "Option::is_none")]
    pub total_rewards_usdt: Option<String>,
    #[serde(rename = "rows", skip_serializing_if = "Option::is_none")]
    pub rows: Option<Vec<models::GetSoftStakingProductListResponseRowsInner>>,
    #[serde(rename = "total", skip_serializing_if = "Option::is_none")]
    pub total: Option<i64>,
}

impl GetSoftStakingProductListResponse {
    #[must_use]
    pub fn new() -> GetSoftStakingProductListResponse {
        GetSoftStakingProductListResponse {
            status: None,
            total_rewards_usdt: None,
            rows: None,
            total: None,
        }
    }
}
