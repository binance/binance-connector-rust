/*
 * Binance Staking REST API
 *
 * OpenAPI Specification for the Binance Staking REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#![allow(unused_imports)]
use crate::staking::rest_api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetSoftStakingProductListResponseRowsInner {
    #[serde(rename = "asset", skip_serializing_if = "Option::is_none")]
    pub asset: Option<String>,
    #[serde(rename = "minAmount", skip_serializing_if = "Option::is_none")]
    pub min_amount: Option<String>,
    #[serde(rename = "maxCap", skip_serializing_if = "Option::is_none")]
    pub max_cap: Option<String>,
    #[serde(rename = "apr", skip_serializing_if = "Option::is_none")]
    pub apr: Option<String>,
    #[serde(rename = "stakedAmount", skip_serializing_if = "Option::is_none")]
    pub staked_amount: Option<String>,
    #[serde(rename = "totalProfit", skip_serializing_if = "Option::is_none")]
    pub total_profit: Option<String>,
}

impl GetSoftStakingProductListResponseRowsInner {
    #[must_use]
    pub fn new() -> GetSoftStakingProductListResponseRowsInner {
        GetSoftStakingProductListResponseRowsInner {
            asset: None,
            min_amount: None,
            max_cap: None,
            apr: None,
            staked_amount: None,
            total_profit: None,
        }
    }
}
